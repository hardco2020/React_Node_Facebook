{"ast":null,"code":"var _jsxFileName = \"/Users/kai/Documents/SideProject/React_Node_Facebook/client/src/components/feed/Feed.jsx\",\n    _s = $RefreshSig$();\n\nimport Share from '../share/Share';\nimport Post from '../post/Post';\nimport './feed.css';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed({\n  username\n}) {\n  _s();\n\n  //proxy設定\n  //暫時使用此方式導入jwt Token\n  console.log(username);\n  const [posts, setPosts] = useState([]);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    console.log(\"test\"); //這邊要用jwt token去呼叫\n    //先隨機給一個 因為還沒拉好認證系統\n\n    const fetchPosts = async () => {\n      const res = username ? await axios.get(\"/api/posts/profile/\" + user.username) : await axios.get(\"/api/posts/timeline/all\"); //console.log(res.data.data)\n      //格式不一樣，對格式做調整\n\n      let data = \"\"; //username ? data = res.data.data : data = res.data.data\n      //console.log(res.data.datax)\n\n      data = res.data.data;\n      setPosts(data.sort((p1, p2) => {\n        //console.log(p1,p2)\n        //console.log(new Date(p2.createdAt)-new Date(p1.createdAt))\n        return new Date(p2.createdAt) - new Date(p1.createdAt);\n      }));\n    };\n\n    fetchPosts();\n  }, [username, user]); //只render一次\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedWrapper\",\n      children: [(!username || username === user.username) && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 62\n      }, this), posts.map(p =>\n      /*#__PURE__*/\n      //console.log(p.id)\n      _jsxDEV(Post, {\n        post: p\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"X6mjf/w2X26pG8PLb9LvJbnNlKY=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/kai/Documents/SideProject/React_Node_Facebook/client/src/components/feed/Feed.jsx"],"names":["Share","Post","useEffect","useState","axios","Feed","username","console","log","posts","setPosts","user","JSON","parse","localStorage","getItem","fetchPosts","res","get","data","sort","p1","p2","Date","createdAt","map","p","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,YAAP;AACA,SAASC,SAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAA0B;AAAA;;AACrC;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMQ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAb,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADU,CAEV;AACA;;AACA,UAAMQ,UAAU,GAAG,YAAU;AACzB,YAAMC,GAAG,GAAGX,QAAQ,GACjB,MAAMF,KAAK,CAACc,GAAN,CAAU,wBAAuBP,IAAI,CAACL,QAAtC,CADW,GAEjB,MAAMF,KAAK,CAACc,GAAN,CAAU,yBAAV,CAFT,CADyB,CAMzB;AAEA;;AACA,UAAIC,IAAI,GAAG,EAAX,CATyB,CAUzB;AACA;;AACAA,MAAAA,IAAI,GAAGF,GAAG,CAACE,IAAJ,CAASA,IAAhB;AACAT,MAAAA,QAAQ,CAACS,IAAI,CAACC,IAAL,CAAU,CAACC,EAAD,EAAIC,EAAJ,KAAS;AACxB;AACA;AACA,eAAO,IAAIC,IAAJ,CAASD,EAAE,CAACE,SAAZ,IAAuB,IAAID,IAAJ,CAASF,EAAE,CAACG,SAAZ,CAA9B;AACH,OAJQ,CAAD,CAAR;AAMH,KAnBD;;AAoBAR,IAAAA,UAAU;AACb,GAzBQ,EAyBP,CAACV,QAAD,EAAUK,IAAV,CAzBO,CAAT,CANqC,CA+BlB;;AAEnB,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACK,CAAC,CAACL,QAAD,IAAaA,QAAQ,KAAIK,IAAI,CAACL,QAA/B,kBAA4C,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADjD,EAEKG,KAAK,CAACgB,GAAN,CAAWC,CAAD;AAAA;AACP;AACA,cAAC,IAAD;AAAkB,QAAA,IAAI,EAAEA;AAAxB,SAAWA,CAAC,CAACC,GAAb;AAAA;AAAA;AAAA;AAAA,cAFH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA5CuBtB,I;;KAAAA,I","sourcesContent":["import Share from '../share/Share'\nimport Post from '../post/Post'\nimport './feed.css'\nimport { useEffect,useState } from 'react'\nimport axios from \"axios\"\nexport default function Feed({username}) {\n    //proxy設定\n    //暫時使用此方式導入jwt Token\n    console.log(username)\n    const [posts,setPosts] = useState([]);\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    useEffect(()=>{\n        console.log(\"test\")\n        //這邊要用jwt token去呼叫\n        //先隨機給一個 因為還沒拉好認證系統\n        const fetchPosts = async ()=>{\n            const res = username \n             ? await axios.get(\"/api/posts/profile/\"+ user.username)\n             : await axios.get(\"/api/posts/timeline/all\")\n\n            \n            //console.log(res.data.data)\n            \n            //格式不一樣，對格式做調整\n            let data = \"\"\n            //username ? data = res.data.data : data = res.data.data\n            //console.log(res.data.datax)\n            data = res.data.data\n            setPosts(data.sort((p1,p2)=>{\n                //console.log(p1,p2)\n                //console.log(new Date(p2.createdAt)-new Date(p1.createdAt))\n                return new Date(p2.createdAt)-new Date(p1.createdAt);\n            }));\n\n        };\n        fetchPosts();\n    },[username,user]) //只render一次\n    \n    return (\n        <div className=\"feed\">\n            <div className=\"feedWrapper\">\n                {(!username || username ===user.username) && <Share/>}\n                {posts.map((p)=>(\n                    //console.log(p.id)\n                    <Post key={p._id} post={p}/>\n                ))}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}