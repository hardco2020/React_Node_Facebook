{"ast":null,"code":"import axios from 'axios';\nimport { decodeToken } from 'react-jwt';\nexport const loginCall = async (userCredential, dispatch) => {\n  dispatch({\n    type: \"LOGIN_START\"\n  });\n\n  try {\n    console.log(userCredential);\n    const res = await axios.post(\"auth/local/signin\", userCredential); //axios.defaults.headers.common['Authorization'] = 'Bearer '+res.data.data.data;\n    //console.log(res.data.data.data)\n    //const user = decodeToken(res.data.data.data)\n\n    console.log(res.data.data);\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: res.data.data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: \"LOGIN_FAILURE\",\n      payload: err\n    });\n  }\n};","map":{"version":3,"sources":["/Users/kai/Documents/SideProject/React_Node_Facebook/client/src/apiCalls.js"],"names":["axios","decodeToken","loginCall","userCredential","dispatch","type","console","log","res","post","data","payload","err"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAO,MAAMC,SAAS,GAAG,OAAOC,cAAP,EAAsBC,QAAtB,KAAiC;AACtDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;;AACA,MAAG;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACA,UAAMK,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,mBAAX,EAA+BN,cAA/B,CAAlB,CAFD,CAGC;AACA;AACA;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACE,IAAJ,CAASA,IAArB;AACAN,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,eAAN;AAAsBM,MAAAA,OAAO,EAACH,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcA;AAA5C,KAAD,CAAR;AACH,GARD,CAQC,OAAME,GAAN,EAAU;AACPR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,eAAN;AAAsBM,MAAAA,OAAO,EAACC;AAA9B,KAAD,CAAR;AACH;AACJ,CAbM","sourcesContent":["\nimport axios from 'axios'\nimport { decodeToken } from 'react-jwt';\nexport const loginCall = async (userCredential,dispatch)=>{\n    dispatch({type:\"LOGIN_START\"});\n    try{\n        console.log(userCredential)\n        const res = await axios.post(\"auth/local/signin\",userCredential)\n        //axios.defaults.headers.common['Authorization'] = 'Bearer '+res.data.data.data;\n        //console.log(res.data.data.data)\n        //const user = decodeToken(res.data.data.data)\n        console.log(res.data.data)\n        dispatch({type:\"LOGIN_SUCCESS\",payload:res.data.data.data});\n    }catch(err){\n        dispatch({type:\"LOGIN_FAILURE\",payload:err});\n    }\n}"]},"metadata":{},"sourceType":"module"}